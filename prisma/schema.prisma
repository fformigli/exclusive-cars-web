generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id      Int    @id @default(autoincrement())
  name    String
  User    User[]
  context String @default("user")

  @@map("roles")
}

model User {
  id             Int           @id @default(autoincrement())
  DocumentType   Configuration @relation(fields: [documentTypeId], references: [id])
  documentTypeId Int
  documentNumber String
  username       String
  fullName       String
  password       String
  Role           Role          @relation(fields: [roleId], references: [id])
  roleId         Int
  type           Int           @default(1)
  createdBy      Int?
  createdAt      DateTime      @default(now())
  Client         Client?
  WorkOrder      WorkOrder[]

  @@map("users")
}

model Client {
  id          Int         @id @default(autoincrement())
  User        User        @relation(fields: [userId], references: [id])
  userId      Int         @unique
  phoneNumber String
  ruc         String
  email       String
  createdBy   Int?
  createdAt   DateTime    @default(now())
  WorkOrder   WorkOrder[]

  @@map("clients")
}

model Configuration {
  id                  Int               @id @default(autoincrement())
  shortName           String
  name                String
  User                User[]
  ConfigurationType   ConfigurationType @relation(fields: [configurationTypeId], references: [id])
  configurationTypeId Int
  seed                Boolean           @default(false)

  @@index([configurationTypeId])
  @@map("configurations")
}

model ConfigurationType {
  id            Int             @id @default(autoincrement())
  name          String
  description   String
  translate     String
  Configuration Configuration[]

  @@map("configuration_types")
}

model WorkOrder {
  id                 Int    @id @default(autoincrement())
  Client             Client @relation(fields: [clientId], references: [id])
  state              Int
  contactPhone       String
  fuelState          Int
  vinnro             String
  mileage            Int
  clientId           Int
  vehicleInformation String
  plate              String
  Assignee           User   @relation(fields: [userId], references: [id])
  userId             Int
  description        String

  @@map("work_orders")
}
